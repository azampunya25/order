basePath: /orders
definitions:
  models.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  models.Items:
    properties:
      description:
        type: string
      itemCode:
        type: string
      itemId:
        type: integer
      orderId:
        type: integer
      quantity:
        type: integer
    type: object
  models.Request:
    properties:
      customerName:
        type: string
      items:
        items:
          $ref: '#/definitions/models.Items'
        type: array
      orderAt:
        type: string
      orderId:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  license: {}
  title: '"ORDER"'
  version: "1.0"
paths:
  /:
    get:
      description: getting all Order
      operationId: get-Order
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Request'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Getting all Order
  /:order_id:
    delete:
      description: Delete Order
      operationId: Delete-Order
      parameters:
      - description: Order ID
        in: path
        name: order_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Request'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete Order
  /create:
    post:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      description: creating a new order
      operationId: create-order
      parameters:
      - description: request body json
        in: body
        name: requestbody
        required: true
        schema:
          $ref: '#/definitions/models.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Request'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create order
  /update:
    put:
      consumes:
      - application/json
      - application/x-www-form-urlencoded
      description: Update order
      operationId: update-order
      parameters:
      - description: request body json
        in: body
        name: requestbody
        required: true
        schema:
          $ref: '#/definitions/models.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Request'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update order
swagger: "2.0"
